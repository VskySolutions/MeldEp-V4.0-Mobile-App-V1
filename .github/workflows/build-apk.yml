name: Android APK per Flavor (Append Builds)

on:
  push:
    branches: [dev, uat, prod]
  workflow_dispatch:
    inputs:
      flavor:
        description: "Flavor to build (overrides branch mapping)"
        type: choice
        required: false
        options: [dev, uat, prod]

env:
  VERSION_NAME: "1.0.2"  # Update this per release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Flutter (stable)
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Resolve FLAVOR (branch or input)
        shell: bash
        run: |
          set -e
          if [[ -n "${{ github.event.inputs.flavor }}" ]]; then
            echo "FLAVOR=${{ github.event.inputs.flavor }}" >> $GITHUB_ENV
          else
            case "${GITHUB_REF_NAME}" in
              dev)  echo "FLAVOR=dev"  >> $GITHUB_ENV ;;
              uat) echo "FLAVOR=uat" >> $GITHUB_ENV ;;
              prod) echo "FLAVOR=prod" >> $GITHUB_ENV ;;
              *)    echo "FLAVOR=dev" >> $GITHUB_ENV ;;
            esac
          fi

      - name: Flutter pub get
        run: flutter pub get

      - name: Decode Android keystore (from secret)
        run: |
          mkdir -p android/app
          python - << 'PY'
          import os, base64, pathlib
          pathlib.Path("android/app").mkdir(parents=True, exist_ok=True)
          data = os.environ["ANDROID_KEYSTORE_BASE64"].strip()
          with open("android/app/keystore.jks", "wb") as f:
              f.write(base64.b64decode(data))
          PY
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Create key.properties (module-relative path)
        run: |
          mkdir -p android
          cat > android/key.properties << 'EOF'
          storeFile=keystore.jks
          storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
          keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}
          EOF

      - name: Set build numbers
        shell: bash
        run: |
          echo "VERSION_NAME=${VERSION_NAME}" >> $GITHUB_ENV
          echo "BUILD_NUMBER=${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV

      - name: Build APK (release, flavored)
        run: |
          flutter build apk \
            --flavor "$FLAVOR" \
            --dart-define=FLAVOR="$FLAVOR" \
            --release \
            --build-name="$VERSION_NAME" \
            --build-number="$BUILD_NUMBER"

      - name: Write APK and notes (do not delete previous)
        shell: bash
        run: |
          set -e
          BUILD_DIR="builds/${FLAVOR}"
          mkdir -p "$BUILD_DIR"

          # Locate generated APK
          APK_SRC="build/app/outputs/flutter-apk/app-${FLAVOR}-release.apk"
          if [ ! -f "$APK_SRC" ]; then
            APK_SRC="build/app/outputs/apk/${FLAVOR}/release/app-${FLAVOR}-release.apk"
          fi

          # Base filename (no UTC; include build number for uniqueness)
          BASE="Meld-EP 4.0 V${VERSION_NAME}(${FLAVOR})"

          # Copy APK with requested name (keeps all previous builds)
          cp "$APK_SRC" "${BUILD_DIR}/${BASE}.apk"

          # Human-readable UTC timestamp
          TS_HUMAN=$(date -u +'%m-%d-%Y %H:%M:%S UTC')

          # Write matching .md with timestamp and editable bullets
          cat > "${BUILD_DIR}/${BASE}.md" <<EOF
          Build: ${BASE}.apk
          Date: ${TS_HUMAN}

          - Created a screen for "Meetings", accessible from the bottom tab bar
          - Added a card with input field to get the ICS URL from the user
          - Added filter functionality on the meetings screen so users can select by month and year.
          - Integrated API to fetch meeting data and display it in cards.
          - Added functionality to create a timesheet directly from the calendar screen, where users can preview the meeting subject, select Project > Module > Task > Activity, and enter activity details to add timesheet lines.
          - Added instructions on "how to get your Microsoft ICS URL" in the “Add ICS URL” form.
          - Displaying timesheet line details if they are already filled.
          - Added functionality to delete timesheet lines.
          - Replaced Start/End Date with Created/Updated Date in View Task Activity

          EOF

      - name: Commit build artifacts
        shell: bash
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add builds/
          git commit -m "Add ${FLAVOR} APK ${VERSION_NAME} (#${BUILD_NUMBER}) [skip ci]" || echo "No changes to commit"

      - name: Push artifacts with PAT
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN }}
          branch: ${{ github.ref_name }}